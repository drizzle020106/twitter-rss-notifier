name: Robust RSS Notifier
on:
  schedule:
    - cron: "*/30 * * * *"  # 每30分钟检查一次
  workflow_dispatch:         # 允许手动触发测试

jobs:
  rss-monitor:
    runs-on: ubuntu-latest
    steps:
      - name: Fetch and Push Notification
        run: |
          #######################################
          # 配置区（直接修改以下参数即可）       #
          #######################################
          
          # WxPusher 配置（必填）
          WXPUSHER_TOKEN="AT_8dVtF3Ao4hEvmxZ65RZoaD39tfD5arNa"  # 替换为你的AppToken
          WXPUSHER_UID="UID_fGIbty1MomMiPuxSmqwdugIFDggm"       # 替换为你的用户UID
          
          # RSS 源配置（支持任何标准RSS）
          RSS_URL="https://rsshub.app/twitter/user/elonmusk"  # 替换为目标源
          
          # 通知内容模板
          MESSAGE_TEMPLATE="📅【更新通知】\n\n标题：{title}\n\n链接：{link}"

          #######################################
          # 核心逻辑（无需修改）                #
          #######################################
          
          # 函数：安全获取XML节点值
          # 参数: $1=XML内容, $2=XPath表达式
          get_xml_value() {
            echo "$1" | xmlstarlet sel -t -v "$2" 2>/dev/null || echo ""
          }

          # 函数：发送通知到微信
          send_notification() {
            local title="$1"
            local link="$2"
            
            # 内容消毒（移除非法字符）
            local clean_title=$(echo "$title" | tr -d '\n\r"' | head -c 200)
            local clean_link=$(echo "$link" | grep -E '^https?://' || echo "https://github.com")
            
            # 使用模板生成内容
            local content=$(echo "$MESSAGE_TEMPLATE" | 
              sed "s/{title}/$clean_title/g" |
              sed "s/{link}/$clean_link/g")
            
            # 构建JSON请求体（使用jq确保格式正确）
            local json_payload=$(jq -n \
              --arg token "$WXPUSHER_TOKEN" \
              --arg uid "$WXPUSHER_UID" \
              --arg content "$content" \
              '{
                appToken: $token,
                content: $content,
                uid: $uid
              }')
            
            # 发送请求（带超时和重试）
            curl -X POST "https://wxpusher.zjiecode.com/api/send/message" \
              -H "Content-Type: application/json" \
              -d "$json_payload" \
              --retry 2 \
              --max-time 30
          }

          #######################################
          # 主执行流程                          #
          #######################################
          
          echo "=== 开始获取RSS数据 ==="
          
          # 获取RSS内容（带失败重试）
          RSS_CONTENT=$(curl -fsL --retry 3 "$RSS_URL" || echo "
            <rss>
              <channel>
                <item>
                  <title>[RSS服务不可用] 最后检测于 $(date +'%Y-%m-%d %H:%M')</title>
                  <link>https://status.github.com</link>
                </item>
              </channel>
            </rss>")
          
          # 解析关键数据
          ITEM_TITLE=$(get_xml_value "$RSS_CONTENT" "//item[1]/title")
          ITEM_LINK=$(get_xml_value "$RSS_CONTENT" "//item[1]/link")
          
          echo "解析结果："
          echo "标题: $ITEM_TITLE"
          echo "链接: $ITEM_LINK"
          
          # 发送通知
          echo "=== 开始推送通知 ==="
          send_notification "$ITEM_TITLE" "$ITEM_LINK"
          
          echo "=== 任务完成 ==="
